{"version":3,"sources":["scripts/main.js"],"names":["ul","document","querySelector","li","querySelectorAll","sortList","list","arrOfData","sort","a","b","dataset","salary","replaceAll","append","getEmployees","map","employee","name","innerText"],"mappings":";AAAA,aAsBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApBA,IAAMA,EAAKC,SAASC,cAAc,MAC5BC,EAAKH,EAAGI,iBAAiB,MAE/B,SAASC,EAASC,GACVC,IAAAA,EAAY,EAAKD,GAAOE,KAAK,SAACC,EAAGC,GAC9B,OAAEA,EAAEC,QAAQC,OAAOC,WAAW,MAAO,KACtCJ,EAAEE,QAAQC,OAAOC,WAAW,MAAO,MAG3Cb,EAAGc,OAAHd,MAAAA,EAAaO,EAAAA,IAGf,SAASQ,EAAaT,GACb,OAAA,EAAKA,GAAOU,IAAI,SAAAC,GAAQ,OAAA,EAAA,CAC7BC,KAAMD,EAASE,WACZF,EAASN,WAIhBN,EAASF,GACTY,EAAaZ","file":"main.09bc9d56.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst ul = document.querySelector('ul');\nconst li = ul.querySelectorAll('li');\n\nfunction sortList(list) {\n  const arrOfData = [ ...list ].sort((a, b) => {\n    return +(b.dataset.salary.replaceAll(/\\D/g, ''))\n      - +(a.dataset.salary.replaceAll(/\\D/g, ''));\n  });\n\n  ul.append(...arrOfData);\n}\n\nfunction getEmployees(list) {\n  return [ ...list ].map(employee => ({\n    name: employee.innerText,\n    ...employee.dataset,\n  }));\n}\n\nsortList(li);\ngetEmployees(li);\n"]}